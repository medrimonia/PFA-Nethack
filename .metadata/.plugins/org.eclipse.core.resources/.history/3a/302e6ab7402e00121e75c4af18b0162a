package bot;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

class Parser{
	
	private BufferedReader input;
	private int mapHeight = -1;
	private int mapWidth = -1;
	
	public Parser(){
		input = new BufferedReader(new InputStreamReader(System.in));
	}
	
	public void parseNextTurn(Bot b) throws IOException{
		// Verify start of message
		if (!input.readLine().equals(Protocole.START_TOKEN))
			throw new RuntimeException("Invalid start");
		String line;
		while ((line = input.readLine()).equals(Protocole.END_TOKEN)){
			// Multi-line message
			Information i = null;
			if (line.startsWith(Protocole.START_TOKEN))
				i = parseMultiLineVar(line);
			// Mono-line message
			else
				i = parseMonoLineVar(line);
			if (i != null)
				b.treatInformation(i);
		}
	}
	
	private Information parseMultiLineVar(String line) throws IOException{
		Variable v = Variable.tokenToVariables(line.split(" ")[1]);
		Object o = null;
		switch (v){
		case MAP :
				o = parseMap();
		default ://TODO should throw Exception
		}
		return new Information(v,o);
	}

	private Map parseMap() throws IOException{
		String line;
		char map[][] = new char[mapHeight][mapWidth];
		while ((line = input.readLine()).equals(Protocole.END_TOKEN +
												" " +
												Variable.MAP.getToken())){
			m
		}
		return null;
	}

	private static Information parseMonoLineVar(String line){
		//TODO
		return null;
	}
}